name: Assets

on:
  release:
    types:
    - created
  pull_request:

env:
  CMAKE_VERSION: '3.19.2'

jobs:
  archive:
    name: Linux
    runs-on: ubuntu-latest
    container: centos:7
    steps:
    - name: Install dependencies
      run: |
        yum install -y epel-release
        yum install -y curl make gcc gcc-c++ rpm-build git
    - name: Install CMake
      run: curl -L https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz | tar xz --strip-components=1 -C /usr
    - uses: actions/checkout@v2
    - name: Configure
      run: cmake . -DCMAKE_BUILD_TYPE=Release
    - name: Package
      run: make -j package
    - id: tarball
      run: echo "##[set-output name=name;]$(ls fletch*.tar.gz)"
    - name: Install
      run: tar xvfz ./${{ steps.tarball.outputs.name }} -C /usr
    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.tarball.outputs.name }}
        asset_name: ${{ steps.tarball.outputs.name }}
        asset_content_type: application/octet-stream

  centos:
    name: CentOS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
        - 7
        - 8
    container: centos:${{ matrix.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        yum install -y epel-release
        yum install -y curl make rpm-build gcc gcc-c++ git
    - name: Install CMake
      run: curl -L https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz | tar xz --strip-components=1 -C /usr
    - name: Configure
      run: cmake . -DCMAKE_BUILD_TYPE=Release
    - name: Package
      run: make -j package
    - id: rpm
      run: echo "##[set-output name=name;]$(ls fletch*.rpm)"
    - name: Install
      run: yum localinstall -y ./${{ steps.rpm.outputs.name }}
    - name: Upload rpm
      uses: actions/upload-release-asset@v1
      if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.rpm.outputs.name }}
        asset_name: ${{ steps.rpm.outputs.name }}
        asset_content_type: application/octet-stream
  
  ubuntu:
    name: Ubuntu
    strategy:
      matrix:
        version:
        - 18.04
        - 20.04
    runs-on: ubuntu-${{ matrix.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Configure
      run: cmake . -DCMAKE_BUILD_TYPE=Release
    - name: Package
      run: make -j package
    - id: deb
      run: echo "##[set-output name=name;]$(ls fletch*.deb)"
    - name: Install
      run: sudo apt-get install -y ./${{ steps.deb.outputs.name }}
    - name: Upload deb
      uses: actions/upload-release-asset@v1
      if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.deb.outputs.name }}
        asset_name: ${{ steps.deb.outputs.name }}
        asset_content_type: application/octet-stream
